default Order dec





























val add_atom = pure {ocaml: "add_int", interpreter: "add_int", lem: "integerAdd", c: "add_int", coq: "Z.add"}: forall 'n 'm.
  (int('n), int('m)) -> int('n + 'm)




val mult_atom = pure {ocaml: "mult", interpreter: "mult", lem: "integerMult", c: "mult_int", coq: "Z.mul"}: forall 'n 'm.
  (int('n), int('m)) -> int('n * 'm)








$sail_internal 






val f : int -> int

function f x = mult_atom(2, x)

val h : int -> int

function h x = add_atom(x, f(x))
