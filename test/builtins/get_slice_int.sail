default Order dec

$include <exception_basic.sail>
$include <flow.sail>
$include <vector_dec.sail>

function main (() : unit) -> unit = {
  assert(get_slice_int(1, -10, 6) == 1^0x1, "get_slice_int(1, -10, 6) == 1^0x1");
  assert(get_slice_int(1, -1, 6) == 1^0x1, "get_slice_int(1, -1, 6) == 1^0x1");
  assert(get_slice_int(1, -11, 6) == 1^0x1, "get_slice_int(1, -11, 6) == 1^0x1");
  assert(get_slice_int(1, -12, 6) == 1^0x1, "get_slice_int(1, -12, 6) == 1^0x1");
  assert(get_slice_int(1, -14, 6) == 1^0x1, "get_slice_int(1, -14, 6) == 1^0x1");
  assert(get_slice_int(1, -15, 6) == 1^0x1, "get_slice_int(1, -15, 6) == 1^0x1");
  assert(get_slice_int(1, -16, 6) == 1^0x1, "get_slice_int(1, -16, 6) == 1^0x1");
  assert(get_slice_int(1, -17, 6) == 1^0x1, "get_slice_int(1, -17, 6) == 1^0x1");
  assert(get_slice_int(1, -19, 6) == 1^0x1, "get_slice_int(1, -19, 6) == 1^0x1");
  assert(get_slice_int(1, -2, 6) == 1^0x1, "get_slice_int(1, -2, 6) == 1^0x1");
  assert(get_slice_int(1, -20, 6) == 1^0x1, "get_slice_int(1, -20, 6) == 1^0x1");
  assert(get_slice_int(1, -23, 6) == 1^0x1, "get_slice_int(1, -23, 6) == 1^0x1");
  assert(get_slice_int(1, -27, 6) == 1^0x1, "get_slice_int(1, -27, 6) == 1^0x1");
  assert(get_slice_int(1, -29, 6) == 1^0x1, "get_slice_int(1, -29, 6) == 1^0x1");
  assert(get_slice_int(1, -3, 6) == 1^0x1, "get_slice_int(1, -3, 6) == 1^0x1");
  assert(get_slice_int(1, -30, 6) == 1^0x1, "get_slice_int(1, -30, 6) == 1^0x1");
  assert(get_slice_int(1, -32, 6) == 1^0x1, "get_slice_int(1, -32, 6) == 1^0x1");
  assert(get_slice_int(1, -33, 6) == 1^0x1, "get_slice_int(1, -33, 6) == 1^0x1");
  assert(get_slice_int(1, -38, 6) == 1^0x1, "get_slice_int(1, -38, 6) == 1^0x1");
  assert(get_slice_int(1, -4, 6) == 1^0x1, "get_slice_int(1, -4, 6) == 1^0x1");
  assert(get_slice_int(1, -41, 6) == 1^0x1, "get_slice_int(1, -41, 6) == 1^0x1");
  assert(get_slice_int(1, -45, 6) == 1^0x1, "get_slice_int(1, -45, 6) == 1^0x1");
  assert(get_slice_int(1, -46, 6) == 1^0x1, "get_slice_int(1, -46, 6) == 1^0x1");
  assert(get_slice_int(1, -49, 6) == 1^0x1, "get_slice_int(1, -49, 6) == 1^0x1");
  assert(get_slice_int(1, -5, 6) == 1^0x1, "get_slice_int(1, -5, 6) == 1^0x1");
  assert(get_slice_int(1, -50, 6) == 1^0x1, "get_slice_int(1, -50, 6) == 1^0x1");
  assert(get_slice_int(1, -52, 6) == 1^0x1, "get_slice_int(1, -52, 6) == 1^0x1");
  assert(get_slice_int(1, -56, 6) == 1^0x1, "get_slice_int(1, -56, 6) == 1^0x1");
  assert(get_slice_int(1, -59, 6) == 1^0x1, "get_slice_int(1, -59, 6) == 1^0x1");
  assert(get_slice_int(1, -6, 6) == 1^0x1, "get_slice_int(1, -6, 6) == 1^0x1");
  assert(get_slice_int(1, -7, 6) == 1^0x1, "get_slice_int(1, -7, 6) == 1^0x1");
  assert(get_slice_int(1, -8, 6) == 1^0x1, "get_slice_int(1, -8, 6) == 1^0x1");
  assert(get_slice_int(1, -9, 6) == 1^0x1, "get_slice_int(1, -9, 6) == 1^0x1");
  assert(get_slice_int(1, 0, 6) == 1^0x0, "get_slice_int(1, 0, 6) == 1^0x0");
  assert(get_slice_int(1, 1, 0) == 1^0x1, "get_slice_int(1, 1, 0) == 1^0x1");
  assert(get_slice_int(1, 1, 6) == 1^0x0, "get_slice_int(1, 1, 6) == 1^0x0");
  assert(get_slice_int(1, 10, 6) == 1^0x0, "get_slice_int(1, 10, 6) == 1^0x0");
  assert(get_slice_int(1, 12, 6) == 1^0x0, "get_slice_int(1, 12, 6) == 1^0x0");
  assert(get_slice_int(1, 13, 6) == 1^0x0, "get_slice_int(1, 13, 6) == 1^0x0");
  assert(get_slice_int(1, 14, 6) == 1^0x0, "get_slice_int(1, 14, 6) == 1^0x0");
  assert(get_slice_int(1, 15, 6) == 1^0x0, "get_slice_int(1, 15, 6) == 1^0x0");
  assert(get_slice_int(1, 19, 6) == 1^0x0, "get_slice_int(1, 19, 6) == 1^0x0");
  assert(get_slice_int(1, 2, 6) == 1^0x0, "get_slice_int(1, 2, 6) == 1^0x0");
  assert(get_slice_int(1, 20, 6) == 1^0x0, "get_slice_int(1, 20, 6) == 1^0x0");
  assert(get_slice_int(1, 23, 6) == 1^0x0, "get_slice_int(1, 23, 6) == 1^0x0");
  assert(get_slice_int(1, 24, 6) == 1^0x0, "get_slice_int(1, 24, 6) == 1^0x0");
  assert(get_slice_int(1, 26, 6) == 1^0x0, "get_slice_int(1, 26, 6) == 1^0x0");
  assert(get_slice_int(1, 3, 6) == 1^0x0, "get_slice_int(1, 3, 6) == 1^0x0");
  assert(get_slice_int(1, 31, 6) == 1^0x0, "get_slice_int(1, 31, 6) == 1^0x0");
  assert(get_slice_int(1, 35, 6) == 1^0x0, "get_slice_int(1, 35, 6) == 1^0x0");
  assert(get_slice_int(1, 4, 6) == 1^0x0, "get_slice_int(1, 4, 6) == 1^0x0");
  assert(get_slice_int(1, 44, 6) == 1^0x0, "get_slice_int(1, 44, 6) == 1^0x0");
  assert(get_slice_int(1, 45, 6) == 1^0x0, "get_slice_int(1, 45, 6) == 1^0x0");
  assert(get_slice_int(1, 46, 6) == 1^0x0, "get_slice_int(1, 46, 6) == 1^0x0");
  assert(get_slice_int(1, 47, 6) == 1^0x0, "get_slice_int(1, 47, 6) == 1^0x0");
  assert(get_slice_int(1, 49, 6) == 1^0x0, "get_slice_int(1, 49, 6) == 1^0x0");
  assert(get_slice_int(1, 5, 6) == 1^0x0, "get_slice_int(1, 5, 6) == 1^0x0");
  assert(get_slice_int(1, 6, 6) == 1^0x0, "get_slice_int(1, 6, 6) == 1^0x0");
  assert(get_slice_int(1, 7, 6) == 1^0x0, "get_slice_int(1, 7, 6) == 1^0x0");
  assert(get_slice_int(11, 1024, 0) == 11^0x400, "get_slice_int(11, 1024, 0) == 11^0x400");
  assert(get_slice_int(2, 1, 0) == 2^0x1, "get_slice_int(2, 1, 0) == 2^0x1");
  assert(get_slice_int(2, 3, 0) == 2^0x3, "get_slice_int(2, 3, 0) == 2^0x3");
  assert(get_slice_int(3, 0, 0) == 3^0x0, "get_slice_int(3, 0, 0) == 3^0x0");
  assert(get_slice_int(3, 1, 0) == 3^0x1, "get_slice_int(3, 1, 0) == 3^0x1");
  assert(get_slice_int(3, 2, 0) == 3^0x2, "get_slice_int(3, 2, 0) == 3^0x2");
  assert(get_slice_int(3, 3, 0) == 3^0x3, "get_slice_int(3, 3, 0) == 3^0x3");
  assert(get_slice_int(3, 4, 0) == 3^0x4, "get_slice_int(3, 4, 0) == 3^0x4");
  assert(get_slice_int(3, 5, 0) == 3^0x5, "get_slice_int(3, 5, 0) == 3^0x5");
  assert(get_slice_int(3, 6, 0) == 3^0x6, "get_slice_int(3, 6, 0) == 3^0x6");
  assert(get_slice_int(3, 7, 0) == 3^0x7, "get_slice_int(3, 7, 0) == 3^0x7");
  assert(get_slice_int(32, 0, 0) == 32^0x0, "get_slice_int(32, 0, 0) == 32^0x0");
  assert(get_slice_int(32, 1, 0) == 32^0x1, "get_slice_int(32, 1, 0) == 32^0x1");
  assert(get_slice_int(32, 10, 0) == 32^0xa, "get_slice_int(32, 10, 0) == 32^0xa");
  assert(get_slice_int(32, 1056964608, 0) == 32^0x3f000000, "get_slice_int(32, 1056964608, 0) == 32^0x3f000000");
  assert(get_slice_int(32, 1057423360, 0) == 32^0x3f070000, "get_slice_int(32, 1057423360, 0) == 32^0x3f070000");
  assert(get_slice_int(32, 1073741824, 0) == 32^0x40000000, "get_slice_int(32, 1073741824, 0) == 32^0x40000000");
  assert(get_slice_int(32, 11, 0) == 32^0xb, "get_slice_int(32, 11, 0) == 32^0xb");
  assert(get_slice_int(32, 12, 0) == 32^0xc, "get_slice_int(32, 12, 0) == 32^0xc");
  assert(get_slice_int(32, 13, 0) == 32^0xd, "get_slice_int(32, 13, 0) == 32^0xd");
  assert(get_slice_int(32, 1342177280, 0) == 32^0x50000000, "get_slice_int(32, 1342177280, 0) == 32^0x50000000");
  assert(get_slice_int(32, 14, 0) == 32^0xe, "get_slice_int(32, 14, 0) == 32^0xe");
  assert(get_slice_int(32, 15, 0) == 32^0xf, "get_slice_int(32, 15, 0) == 32^0xf");
  assert(get_slice_int(32, 16, 0) == 32^0x10, "get_slice_int(32, 16, 0) == 32^0x10");
  assert(get_slice_int(32, 17, 0) == 32^0x11, "get_slice_int(32, 17, 0) == 32^0x11");
  assert(get_slice_int(32, 18, 0) == 32^0x12, "get_slice_int(32, 18, 0) == 32^0x12");
  assert(get_slice_int(32, 19, 0) == 32^0x13, "get_slice_int(32, 19, 0) == 32^0x13");
  assert(get_slice_int(32, 2, 0) == 32^0x2, "get_slice_int(32, 2, 0) == 32^0x2");
  assert(get_slice_int(32, 20, 0) == 32^0x14, "get_slice_int(32, 20, 0) == 32^0x14");
  assert(get_slice_int(32, 21, 0) == 32^0x15, "get_slice_int(32, 21, 0) == 32^0x15");
  assert(get_slice_int(32, 22, 0) == 32^0x16, "get_slice_int(32, 22, 0) == 32^0x16");
  assert(get_slice_int(32, 23, 0) == 32^0x17, "get_slice_int(32, 23, 0) == 32^0x17");
  assert(get_slice_int(32, 24, 0) == 32^0x18, "get_slice_int(32, 24, 0) == 32^0x18");
  assert(get_slice_int(32, 25, 0) == 32^0x19, "get_slice_int(32, 25, 0) == 32^0x19");
  assert(get_slice_int(32, 255, 0) == 32^0xff, "get_slice_int(32, 255, 0) == 32^0xff");
  assert(get_slice_int(32, 26, 0) == 32^0x1a, "get_slice_int(32, 26, 0) == 32^0x1a");
  assert(get_slice_int(32, 267386880, 0) == 32^0xff00000, "get_slice_int(32, 267386880, 0) == 32^0xff00000");
  assert(get_slice_int(32, 27, 0) == 32^0x1b, "get_slice_int(32, 27, 0) == 32^0x1b");
  assert(get_slice_int(32, 28, 0) == 32^0x1c, "get_slice_int(32, 28, 0) == 32^0x1c");
  assert(get_slice_int(32, 29, 0) == 32^0x1d, "get_slice_int(32, 29, 0) == 32^0x1d");
  assert(get_slice_int(32, 3, 0) == 32^0x3, "get_slice_int(32, 3, 0) == 32^0x3");
  assert(get_slice_int(32, 30, 0) == 32^0x1e, "get_slice_int(32, 30, 0) == 32^0x1e");
  assert(get_slice_int(32, 31, 0) == 32^0x1f, "get_slice_int(32, 31, 0) == 32^0x1f");
  assert(get_slice_int(32, 35, 0) == 32^0x23, "get_slice_int(32, 35, 0) == 32^0x23");
  assert(get_slice_int(32, 4, 0) == 32^0x4, "get_slice_int(32, 4, 0) == 32^0x4");
  assert(get_slice_int(32, 4027580415, 0) == 32^0xf00fffff, "get_slice_int(32, 4027580415, 0) == 32^0xf00fffff");
  assert(get_slice_int(32, 4294967256, 0) == 32^0xffffffd8, "get_slice_int(32, 4294967256, 0) == 32^0xffffffd8");
  assert(get_slice_int(32, 4294967264, 0) == 32^0xffffffe0, "get_slice_int(32, 4294967264, 0) == 32^0xffffffe0");
  assert(get_slice_int(32, 4294967268, 0) == 32^0xffffffe4, "get_slice_int(32, 4294967268, 0) == 32^0xffffffe4");
  assert(get_slice_int(32, 4294967269, 0) == 32^0xffffffe5, "get_slice_int(32, 4294967269, 0) == 32^0xffffffe5");
  assert(get_slice_int(32, 4294967273, 0) == 32^0xffffffe9, "get_slice_int(32, 4294967273, 0) == 32^0xffffffe9");
  assert(get_slice_int(32, 4294967276, 0) == 32^0xffffffec, "get_slice_int(32, 4294967276, 0) == 32^0xffffffec");
  assert(get_slice_int(32, 4294967277, 0) == 32^0xffffffed, "get_slice_int(32, 4294967277, 0) == 32^0xffffffed");
  assert(get_slice_int(32, 4294967278, 0) == 32^0xffffffee, "get_slice_int(32, 4294967278, 0) == 32^0xffffffee");
  assert(get_slice_int(32, 4294967279, 0) == 32^0xffffffef, "get_slice_int(32, 4294967279, 0) == 32^0xffffffef");
  assert(get_slice_int(32, 4294967280, 0) == 32^0xfffffff0, "get_slice_int(32, 4294967280, 0) == 32^0xfffffff0");
  assert(get_slice_int(32, 4294967281, 0) == 32^0xfffffff1, "get_slice_int(32, 4294967281, 0) == 32^0xfffffff1");
  assert(get_slice_int(32, 4294967282, 0) == 32^0xfffffff2, "get_slice_int(32, 4294967282, 0) == 32^0xfffffff2");
  assert(get_slice_int(32, 4294967283, 0) == 32^0xfffffff3, "get_slice_int(32, 4294967283, 0) == 32^0xfffffff3");
  assert(get_slice_int(32, 4294967284, 0) == 32^0xfffffff4, "get_slice_int(32, 4294967284, 0) == 32^0xfffffff4");
  assert(get_slice_int(32, 4294967285, 0) == 32^0xfffffff5, "get_slice_int(32, 4294967285, 0) == 32^0xfffffff5");
  assert(get_slice_int(32, 4294967286, 0) == 32^0xfffffff6, "get_slice_int(32, 4294967286, 0) == 32^0xfffffff6");
  assert(get_slice_int(32, 4294967287, 0) == 32^0xfffffff7, "get_slice_int(32, 4294967287, 0) == 32^0xfffffff7");
  assert(get_slice_int(32, 4294967288, 0) == 32^0xfffffff8, "get_slice_int(32, 4294967288, 0) == 32^0xfffffff8");
  assert(get_slice_int(32, 4294967289, 0) == 32^0xfffffff9, "get_slice_int(32, 4294967289, 0) == 32^0xfffffff9");
  assert(get_slice_int(32, 4294967290, 0) == 32^0xfffffffa, "get_slice_int(32, 4294967290, 0) == 32^0xfffffffa");
  assert(get_slice_int(32, 4294967291, 0) == 32^0xfffffffb, "get_slice_int(32, 4294967291, 0) == 32^0xfffffffb");
  assert(get_slice_int(32, 4294967292, 0) == 32^0xfffffffc, "get_slice_int(32, 4294967292, 0) == 32^0xfffffffc");
  assert(get_slice_int(32, 4294967293, 0) == 32^0xfffffffd, "get_slice_int(32, 4294967293, 0) == 32^0xfffffffd");
  assert(get_slice_int(32, 4294967294, 0) == 32^0xfffffffe, "get_slice_int(32, 4294967294, 0) == 32^0xfffffffe");
  assert(get_slice_int(32, 4294967295, 0) == 32^0xffffffff, "get_slice_int(32, 4294967295, 0) == 32^0xffffffff");
  assert(get_slice_int(32, 4294967296, 0) == 32^0x0, "get_slice_int(32, 4294967296, 0) == 32^0x0");
  assert(get_slice_int(32, 4294967297, 0) == 32^0x1, "get_slice_int(32, 4294967297, 0) == 32^0x1");
  assert(get_slice_int(32, 4294967298, 0) == 32^0x2, "get_slice_int(32, 4294967298, 0) == 32^0x2");
  assert(get_slice_int(32, 4294967299, 0) == 32^0x3, "get_slice_int(32, 4294967299, 0) == 32^0x3");
  assert(get_slice_int(32, 4294967300, 0) == 32^0x4, "get_slice_int(32, 4294967300, 0) == 32^0x4");
  assert(get_slice_int(32, 4294967301, 0) == 32^0x5, "get_slice_int(32, 4294967301, 0) == 32^0x5");
  assert(get_slice_int(32, 4294967304, 0) == 32^0x8, "get_slice_int(32, 4294967304, 0) == 32^0x8");
  assert(get_slice_int(32, 4294967305, 0) == 32^0x9, "get_slice_int(32, 4294967305, 0) == 32^0x9");
  assert(get_slice_int(32, 4294967306, 0) == 32^0xa, "get_slice_int(32, 4294967306, 0) == 32^0xa");
  assert(get_slice_int(32, 4294967307, 0) == 32^0xb, "get_slice_int(32, 4294967307, 0) == 32^0xb");
  assert(get_slice_int(32, 4294967308, 0) == 32^0xc, "get_slice_int(32, 4294967308, 0) == 32^0xc");
  assert(get_slice_int(32, 4294967309, 0) == 32^0xd, "get_slice_int(32, 4294967309, 0) == 32^0xd");
  assert(get_slice_int(32, 4294967310, 0) == 32^0xe, "get_slice_int(32, 4294967310, 0) == 32^0xe");
  assert(get_slice_int(32, 4294967311, 0) == 32^0xf, "get_slice_int(32, 4294967311, 0) == 32^0xf");
  assert(get_slice_int(32, 4294967313, 0) == 32^0x11, "get_slice_int(32, 4294967313, 0) == 32^0x11");
  assert(get_slice_int(32, 4294967316, 0) == 32^0x14, "get_slice_int(32, 4294967316, 0) == 32^0x14");
  assert(get_slice_int(32, 4294967317, 0) == 32^0x15, "get_slice_int(32, 4294967317, 0) == 32^0x15");
  assert(get_slice_int(32, 4294967321, 0) == 32^0x19, "get_slice_int(32, 4294967321, 0) == 32^0x19");
  assert(get_slice_int(32, 4294967324, 0) == 32^0x1c, "get_slice_int(32, 4294967324, 0) == 32^0x1c");
  assert(get_slice_int(32, 4294967326, 0) == 32^0x1e, "get_slice_int(32, 4294967326, 0) == 32^0x1e");
  assert(get_slice_int(32, 4294967327, 0) == 32^0x1f, "get_slice_int(32, 4294967327, 0) == 32^0x1f");
  assert(get_slice_int(32, 4294967328, 0) == 32^0x20, "get_slice_int(32, 4294967328, 0) == 32^0x20");
  assert(get_slice_int(32, 4294967329, 0) == 32^0x21, "get_slice_int(32, 4294967329, 0) == 32^0x21");
  assert(get_slice_int(32, 4294967333, 0) == 32^0x25, "get_slice_int(32, 4294967333, 0) == 32^0x25");
  assert(get_slice_int(32, 4294967334, 0) == 32^0x26, "get_slice_int(32, 4294967334, 0) == 32^0x26");
  assert(get_slice_int(32, 4294967335, 0) == 32^0x27, "get_slice_int(32, 4294967335, 0) == 32^0x27");
  assert(get_slice_int(32, 4294967336, 0) == 32^0x28, "get_slice_int(32, 4294967336, 0) == 32^0x28");
  assert(get_slice_int(32, 4294967337, 0) == 32^0x29, "get_slice_int(32, 4294967337, 0) == 32^0x29");
  assert(get_slice_int(32, 4294967338, 0) == 32^0x2a, "get_slice_int(32, 4294967338, 0) == 32^0x2a");
  assert(get_slice_int(32, 4294967339, 0) == 32^0x2b, "get_slice_int(32, 4294967339, 0) == 32^0x2b");
  assert(get_slice_int(32, 4294967341, 0) == 32^0x2d, "get_slice_int(32, 4294967341, 0) == 32^0x2d");
  assert(get_slice_int(32, 4294967342, 0) == 32^0x2e, "get_slice_int(32, 4294967342, 0) == 32^0x2e");
  assert(get_slice_int(32, 4294967343, 0) == 32^0x2f, "get_slice_int(32, 4294967343, 0) == 32^0x2f");
  assert(get_slice_int(32, 4294967344, 0) == 32^0x30, "get_slice_int(32, 4294967344, 0) == 32^0x30");
  assert(get_slice_int(32, 4294967345, 0) == 32^0x31, "get_slice_int(32, 4294967345, 0) == 32^0x31");
  assert(get_slice_int(32, 4294967346, 0) == 32^0x32, "get_slice_int(32, 4294967346, 0) == 32^0x32");
  assert(get_slice_int(32, 4294967347, 0) == 32^0x33, "get_slice_int(32, 4294967347, 0) == 32^0x33");
  assert(get_slice_int(32, 4294967348, 0) == 32^0x34, "get_slice_int(32, 4294967348, 0) == 32^0x34");
  assert(get_slice_int(32, 4294967350, 0) == 32^0x36, "get_slice_int(32, 4294967350, 0) == 32^0x36");
  assert(get_slice_int(32, 4294967352, 0) == 32^0x38, "get_slice_int(32, 4294967352, 0) == 32^0x38");
  assert(get_slice_int(32, 4294967354, 0) == 32^0x3a, "get_slice_int(32, 4294967354, 0) == 32^0x3a");
  assert(get_slice_int(32, 4294967356, 0) == 32^0x3c, "get_slice_int(32, 4294967356, 0) == 32^0x3c");
  assert(get_slice_int(32, 4294967358, 0) == 32^0x3e, "get_slice_int(32, 4294967358, 0) == 32^0x3e");
  assert(get_slice_int(32, 4294967359, 0) == 32^0x3f, "get_slice_int(32, 4294967359, 0) == 32^0x3f");
  assert(get_slice_int(32, 4294967360, 0) == 32^0x40, "get_slice_int(32, 4294967360, 0) == 32^0x40");
  assert(get_slice_int(32, 4294967361, 0) == 32^0x41, "get_slice_int(32, 4294967361, 0) == 32^0x41");
  assert(get_slice_int(32, 4294967363, 0) == 32^0x43, "get_slice_int(32, 4294967363, 0) == 32^0x43");
  assert(get_slice_int(32, 4294967364, 0) == 32^0x44, "get_slice_int(32, 4294967364, 0) == 32^0x44");
  assert(get_slice_int(32, 4294967365, 0) == 32^0x45, "get_slice_int(32, 4294967365, 0) == 32^0x45");
  assert(get_slice_int(32, 8589934591, 0) == 32^0xffffffff, "get_slice_int(32, 8589934591, 0) == 32^0xffffffff");
  assert(get_slice_int(32, 9, 0) == 32^0x9, "get_slice_int(32, 9, 0) == 32^0x9");
  assert(get_slice_int(4, 0, 0) == 4^0x0, "get_slice_int(4, 0, 0) == 4^0x0");
  assert(get_slice_int(4, 1, 0) == 4^0x1, "get_slice_int(4, 1, 0) == 4^0x1");
  assert(get_slice_int(4, 10, 0) == 4^0xa, "get_slice_int(4, 10, 0) == 4^0xa");
  assert(get_slice_int(4, 12, 0) == 4^0xc, "get_slice_int(4, 12, 0) == 4^0xc");
  assert(get_slice_int(4, 13, 0) == 4^0xd, "get_slice_int(4, 13, 0) == 4^0xd");
  assert(get_slice_int(4, 14, 0) == 4^0xe, "get_slice_int(4, 14, 0) == 4^0xe");
  assert(get_slice_int(4, 2, 0) == 4^0x2, "get_slice_int(4, 2, 0) == 4^0x2");
  assert(get_slice_int(4, 3, 0) == 4^0x3, "get_slice_int(4, 3, 0) == 4^0x3");
  assert(get_slice_int(4, 4, 0) == 4^0x4, "get_slice_int(4, 4, 0) == 4^0x4");
  assert(get_slice_int(4, 5, 0) == 4^0x5, "get_slice_int(4, 5, 0) == 4^0x5");
  assert(get_slice_int(4, 6, 0) == 4^0x6, "get_slice_int(4, 6, 0) == 4^0x6");
  assert(get_slice_int(4, 7, 0) == 4^0x7, "get_slice_int(4, 7, 0) == 4^0x7");
  assert(get_slice_int(4, 8, 0) == 4^0x8, "get_slice_int(4, 8, 0) == 4^0x8");
  // Not sure we want this property!
  // assert(get_slice_int(4, undefined, 0) == 4^0x0, "get_slice_int(4, undefined, 0) == 4^0x0");
  assert(get_slice_int(5, 0, 0) == 5^0x0, "get_slice_int(5, 0, 0) == 5^0x0");
  assert(get_slice_int(5, 1, 0) == 5^0x1, "get_slice_int(5, 1, 0) == 5^0x1");
  assert(get_slice_int(5, 17, 0) == 5^0x11, "get_slice_int(5, 17, 0) == 5^0x11");
  assert(get_slice_int(5, 18, 0) == 5^0x12, "get_slice_int(5, 18, 0) == 5^0x12");
  assert(get_slice_int(5, 19, 0) == 5^0x13, "get_slice_int(5, 19, 0) == 5^0x13");
  assert(get_slice_int(5, 2, 0) == 5^0x2, "get_slice_int(5, 2, 0) == 5^0x2");
  assert(get_slice_int(5, 20, 0) == 5^0x14, "get_slice_int(5, 20, 0) == 5^0x14");
  assert(get_slice_int(5, 21, 0) == 5^0x15, "get_slice_int(5, 21, 0) == 5^0x15");
  assert(get_slice_int(5, 22, 0) == 5^0x16, "get_slice_int(5, 22, 0) == 5^0x16");
  assert(get_slice_int(5, 23, 0) == 5^0x17, "get_slice_int(5, 23, 0) == 5^0x17");
  assert(get_slice_int(5, 24, 0) == 5^0x18, "get_slice_int(5, 24, 0) == 5^0x18");
  assert(get_slice_int(5, 27, 0) == 5^0x1b, "get_slice_int(5, 27, 0) == 5^0x1b");
  assert(get_slice_int(5, 3, 0) == 5^0x3, "get_slice_int(5, 3, 0) == 5^0x3");
  assert(get_slice_int(5, 30, 0) == 5^0x1e, "get_slice_int(5, 30, 0) == 5^0x1e");
  assert(get_slice_int(5, 4, 0) == 5^0x4, "get_slice_int(5, 4, 0) == 5^0x4");
  assert(get_slice_int(5, 5, 0) == 5^0x5, "get_slice_int(5, 5, 0) == 5^0x5");
  assert(get_slice_int(5, 6, 0) == 5^0x6, "get_slice_int(5, 6, 0) == 5^0x6");
  assert(get_slice_int(5, 7, 0) == 5^0x7, "get_slice_int(5, 7, 0) == 5^0x7");
  assert(get_slice_int(5, 8, 0) == 5^0x8, "get_slice_int(5, 8, 0) == 5^0x8");
  assert(get_slice_int(52, 318767104, 0) == 52^0x13000000, "get_slice_int(52, 318767104, 0) == 52^0x13000000");
  assert(get_slice_int(52, 4503599627304960, 0) == 52^0xfffffffff0000, "get_slice_int(52, 4503599627304960, 0) == 52^0xfffffffff0000");
  assert(get_slice_int(6, -1, 0) == 6^0x3f, "get_slice_int(6, -1, 0) == 6^0x3f");
  assert(get_slice_int(6, -10, 0) == 6^0x36, "get_slice_int(6, -10, 0) == 6^0x36");
  assert(get_slice_int(6, -11, 0) == 6^0x35, "get_slice_int(6, -11, 0) == 6^0x35");
  assert(get_slice_int(6, -12, 0) == 6^0x34, "get_slice_int(6, -12, 0) == 6^0x34");
  assert(get_slice_int(6, -14, 0) == 6^0x32, "get_slice_int(6, -14, 0) == 6^0x32");
  assert(get_slice_int(6, -15, 0) == 6^0x31, "get_slice_int(6, -15, 0) == 6^0x31");
  assert(get_slice_int(6, -16, 0) == 6^0x30, "get_slice_int(6, -16, 0) == 6^0x30");
  assert(get_slice_int(6, -17, 0) == 6^0x2f, "get_slice_int(6, -17, 0) == 6^0x2f");
  assert(get_slice_int(6, -19, 0) == 6^0x2d, "get_slice_int(6, -19, 0) == 6^0x2d");
  assert(get_slice_int(6, -2, 0) == 6^0x3e, "get_slice_int(6, -2, 0) == 6^0x3e");
  assert(get_slice_int(6, -20, 0) == 6^0x2c, "get_slice_int(6, -20, 0) == 6^0x2c");
  assert(get_slice_int(6, -23, 0) == 6^0x29, "get_slice_int(6, -23, 0) == 6^0x29");
  assert(get_slice_int(6, -27, 0) == 6^0x25, "get_slice_int(6, -27, 0) == 6^0x25");
  assert(get_slice_int(6, -29, 0) == 6^0x23, "get_slice_int(6, -29, 0) == 6^0x23");
  assert(get_slice_int(6, -3, 0) == 6^0x3d, "get_slice_int(6, -3, 0) == 6^0x3d");
  assert(get_slice_int(6, -30, 0) == 6^0x22, "get_slice_int(6, -30, 0) == 6^0x22");
  assert(get_slice_int(6, -32, 0) == 6^0x20, "get_slice_int(6, -32, 0) == 6^0x20");
  assert(get_slice_int(6, -33, 0) == 6^0x1f, "get_slice_int(6, -33, 0) == 6^0x1f");
  assert(get_slice_int(6, -38, 0) == 6^0x1a, "get_slice_int(6, -38, 0) == 6^0x1a");
  assert(get_slice_int(6, -4, 0) == 6^0x3c, "get_slice_int(6, -4, 0) == 6^0x3c");
  assert(get_slice_int(6, -41, 0) == 6^0x17, "get_slice_int(6, -41, 0) == 6^0x17");
  assert(get_slice_int(6, -45, 0) == 6^0x13, "get_slice_int(6, -45, 0) == 6^0x13");
  assert(get_slice_int(6, -46, 0) == 6^0x12, "get_slice_int(6, -46, 0) == 6^0x12");
  assert(get_slice_int(6, -49, 0) == 6^0xf, "get_slice_int(6, -49, 0) == 6^0xf");
  assert(get_slice_int(64, 169869480, 0) == 64^0xa2000a8, "get_slice_int(64, 169869480, 0) == 64^0xa2000a8");
  assert(get_slice_int(64, 169869484, 0) == 64^0xa2000ac, "get_slice_int(64, 169869484, 0) == 64^0xa2000ac");
  assert(get_slice_int(64, 173015148, 0) == 64^0xa50006c, "get_slice_int(64, 173015148, 0) == 64^0xa50006c");
  assert(get_slice_int(64, 173015152, 0) == 64^0xa500070, "get_slice_int(64, 173015152, 0) == 64^0xa500070");
  assert(get_slice_int(64, 173015156, 0) == 64^0xa500074, "get_slice_int(64, 173015156, 0) == 64^0xa500074");
  assert(get_slice_int(64, 180224, 0) == 64^0x2c000, "get_slice_int(64, 180224, 0) == 64^0x2c000");
  assert(get_slice_int(64, 18446708893632421888, 0) == 64^0xffffe000ffffe000, "get_slice_int(64, 18446708893632421888, 0) == 64^0xffffe000ffffe000");
  assert(get_slice_int(64, 18446744073658712064, 0) == 64^0xfffffffffcf84000, "get_slice_int(64, 18446744073658712064, 0) == 64^0xfffffffffcf84000");
  assert(get_slice_int(64, 18446744073658777600, 0) == 64^0xfffffffffcf94000, "get_slice_int(64, 18446744073658777600, 0) == 64^0xfffffffffcf94000");
  assert(get_slice_int(64, 18446744073658843136, 0) == 64^0xfffffffffcfa4000, "get_slice_int(64, 18446744073658843136, 0) == 64^0xfffffffffcfa4000");
  assert(get_slice_int(64, 18446744073660252160, 0) == 64^0xfffffffffd0fc000, "get_slice_int(64, 18446744073660252160, 0) == 64^0xfffffffffd0fc000");
  assert(get_slice_int(64, 18446744073660317696, 0) == 64^0xfffffffffd10c000, "get_slice_int(64, 18446744073660317696, 0) == 64^0xfffffffffd10c000");
  assert(get_slice_int(64, 18446744073660465152, 0) == 64^0xfffffffffd130000, "get_slice_int(64, 18446744073660465152, 0) == 64^0xfffffffffd130000");
  assert(get_slice_int(64, 18446744073660530688, 0) == 64^0xfffffffffd140000, "get_slice_int(64, 18446744073660530688, 0) == 64^0xfffffffffd140000");
  assert(get_slice_int(64, 18446744073660727296, 0) == 64^0xfffffffffd170000, "get_slice_int(64, 18446744073660727296, 0) == 64^0xfffffffffd170000");
  assert(get_slice_int(64, 18446744073660841984, 0) == 64^0xfffffffffd18c000, "get_slice_int(64, 18446744073660841984, 0) == 64^0xfffffffffd18c000");
  assert(get_slice_int(64, 18446744073708961792, 0) == 64^0xfffffffffff70000, "get_slice_int(64, 18446744073708961792, 0) == 64^0xfffffffffff70000");
  assert(get_slice_int(64, 18446744073709027328, 0) == 64^0xfffffffffff80000, "get_slice_int(64, 18446744073709027328, 0) == 64^0xfffffffffff80000");
  assert(get_slice_int(64, 18446744073709289472, 0) == 64^0xfffffffffffc0000, "get_slice_int(64, 18446744073709289472, 0) == 64^0xfffffffffffc0000");
  assert(get_slice_int(64, 18446744073709355008, 0) == 64^0xfffffffffffd0000, "get_slice_int(64, 18446744073709355008, 0) == 64^0xfffffffffffd0000");
  assert(get_slice_int(64, 75248, 0) == 64^0x125f0, "get_slice_int(64, 75248, 0) == 64^0x125f0");
  assert(get_slice_int(64, 75252, 0) == 64^0x125f4, "get_slice_int(64, 75252, 0) == 64^0x125f4");
  assert(get_slice_int(64, 75256, 0) == 64^0x125f8, "get_slice_int(64, 75256, 0) == 64^0x125f8");
  assert(get_slice_int(64, 75260, 0) == 64^0x125fc, "get_slice_int(64, 75260, 0) == 64^0x125fc");
  assert(get_slice_int(64, 75264, 0) == 64^0x12600, "get_slice_int(64, 75264, 0) == 64^0x12600");
  assert(get_slice_int(64, 75268, 0) == 64^0x12604, "get_slice_int(64, 75268, 0) == 64^0x12604");
  assert(get_slice_int(64, 75272, 0) == 64^0x12608, "get_slice_int(64, 75272, 0) == 64^0x12608");
  assert(get_slice_int(64, 75276, 0) == 64^0x1260c, "get_slice_int(64, 75276, 0) == 64^0x1260c");
  assert(get_slice_int(64, 75280, 0) == 64^0x12610, "get_slice_int(64, 75280, 0) == 64^0x12610");
  assert(get_slice_int(64, 75296, 0) == 64^0x12620, "get_slice_int(64, 75296, 0) == 64^0x12620");
  assert(get_slice_int(64, 75872, 0) == 64^0x12860, "get_slice_int(64, 75872, 0) == 64^0x12860");
  assert(get_slice_int(64, 8, 0) == 64^0x8, "get_slice_int(64, 8, 0) == 64^0x8");
  assert(get_slice_int(64, 82944, 0) == 64^0x14400, "get_slice_int(64, 82944, 0) == 64^0x14400");
  assert(get_slice_int(64, 84660, 0) == 64^0x14ab4, "get_slice_int(64, 84660, 0) == 64^0x14ab4");
  assert(get_slice_int(64, 84664, 0) == 64^0x14ab8, "get_slice_int(64, 84664, 0) == 64^0x14ab8");
  assert(get_slice_int(64, 84668, 0) == 64^0x14abc, "get_slice_int(64, 84668, 0) == 64^0x14abc");
  assert(get_slice_int(64, 84672, 0) == 64^0x14ac0, "get_slice_int(64, 84672, 0) == 64^0x14ac0");
  assert(get_slice_int(64, 84676, 0) == 64^0x14ac4, "get_slice_int(64, 84676, 0) == 64^0x14ac4");
  assert(get_slice_int(64, 84680, 0) == 64^0x14ac8, "get_slice_int(64, 84680, 0) == 64^0x14ac8");
  assert(get_slice_int(64, 84692, 0) == 64^0x14ad4, "get_slice_int(64, 84692, 0) == 64^0x14ad4");
  assert(get_slice_int(64, 84696, 0) == 64^0x14ad8, "get_slice_int(64, 84696, 0) == 64^0x14ad8");
  assert(get_slice_int(64, 84700, 0) == 64^0x14adc, "get_slice_int(64, 84700, 0) == 64^0x14adc");
  assert(get_slice_int(64, 84704, 0) == 64^0x14ae0, "get_slice_int(64, 84704, 0) == 64^0x14ae0");
  assert(get_slice_int(64, 84708, 0) == 64^0x14ae4, "get_slice_int(64, 84708, 0) == 64^0x14ae4");
  assert(get_slice_int(64, 84712, 0) == 64^0x14ae8, "get_slice_int(64, 84712, 0) == 64^0x14ae8");
  assert(get_slice_int(64, 84716, 0) == 64^0x14aec, "get_slice_int(64, 84716, 0) == 64^0x14aec");
  assert(get_slice_int(64, 84720, 0) == 64^0x14af0, "get_slice_int(64, 84720, 0) == 64^0x14af0");
  assert(get_slice_int(64, 84724, 0) == 64^0x14af4, "get_slice_int(64, 84724, 0) == 64^0x14af4");
  assert(get_slice_int(64, 84728, 0) == 64^0x14af8, "get_slice_int(64, 84728, 0) == 64^0x14af8");
  assert(get_slice_int(64, 84732, 0) == 64^0x14afc, "get_slice_int(64, 84732, 0) == 64^0x14afc");
  assert(get_slice_int(64, 84736, 0) == 64^0x14b00, "get_slice_int(64, 84736, 0) == 64^0x14b00");
  assert(get_slice_int(64, 84740, 0) == 64^0x14b04, "get_slice_int(64, 84740, 0) == 64^0x14b04");
  assert(get_slice_int(64, 84872, 0) == 64^0x14b88, "get_slice_int(64, 84872, 0) == 64^0x14b88");
  assert(get_slice_int(64, 84876, 0) == 64^0x14b8c, "get_slice_int(64, 84876, 0) == 64^0x14b8c");
  assert(get_slice_int(64, 84880, 0) == 64^0x14b90, "get_slice_int(64, 84880, 0) == 64^0x14b90");
  assert(get_slice_int(64, 84884, 0) == 64^0x14b94, "get_slice_int(64, 84884, 0) == 64^0x14b94");
  assert(get_slice_int(64, 84888, 0) == 64^0x14b98, "get_slice_int(64, 84888, 0) == 64^0x14b98");
  assert(get_slice_int(64, 84892, 0) == 64^0x14b9c, "get_slice_int(64, 84892, 0) == 64^0x14b9c");
  assert(get_slice_int(64, 84896, 0) == 64^0x14ba0, "get_slice_int(64, 84896, 0) == 64^0x14ba0");
  assert(get_slice_int(64, 84900, 0) == 64^0x14ba4, "get_slice_int(64, 84900, 0) == 64^0x14ba4");
  assert(get_slice_int(64, 84904, 0) == 64^0x14ba8, "get_slice_int(64, 84904, 0) == 64^0x14ba8");
  assert(get_slice_int(64, 84908, 0) == 64^0x14bac, "get_slice_int(64, 84908, 0) == 64^0x14bac");
  assert(get_slice_int(64, 84912, 0) == 64^0x14bb0, "get_slice_int(64, 84912, 0) == 64^0x14bb0");
  assert(get_slice_int(64, 84916, 0) == 64^0x14bb4, "get_slice_int(64, 84916, 0) == 64^0x14bb4");
  assert(get_slice_int(64, 84920, 0) == 64^0x14bb8, "get_slice_int(64, 84920, 0) == 64^0x14bb8");
  assert(get_slice_int(64, 84924, 0) == 64^0x14bbc, "get_slice_int(64, 84924, 0) == 64^0x14bbc");
  assert(get_slice_int(64, 85348, 0) == 64^0x14d64, "get_slice_int(64, 85348, 0) == 64^0x14d64");
  assert(get_slice_int(64, 85352, 0) == 64^0x14d68, "get_slice_int(64, 85352, 0) == 64^0x14d68");
  assert(get_slice_int(64, 85356, 0) == 64^0x14d6c, "get_slice_int(64, 85356, 0) == 64^0x14d6c");
  assert(get_slice_int(64, 85360, 0) == 64^0x14d70, "get_slice_int(64, 85360, 0) == 64^0x14d70");
  assert(get_slice_int(64, 85364, 0) == 64^0x14d74, "get_slice_int(64, 85364, 0) == 64^0x14d74");
  assert(get_slice_int(64, 85368, 0) == 64^0x14d78, "get_slice_int(64, 85368, 0) == 64^0x14d78");
  assert(get_slice_int(64, 85372, 0) == 64^0x14d7c, "get_slice_int(64, 85372, 0) == 64^0x14d7c");
  assert(get_slice_int(64, 85376, 0) == 64^0x14d80, "get_slice_int(64, 85376, 0) == 64^0x14d80");
  assert(get_slice_int(64, 85380, 0) == 64^0x14d84, "get_slice_int(64, 85380, 0) == 64^0x14d84");
  assert(get_slice_int(64, 85384, 0) == 64^0x14d88, "get_slice_int(64, 85384, 0) == 64^0x14d88");
  assert(get_slice_int(64, 85388, 0) == 64^0x14d8c, "get_slice_int(64, 85388, 0) == 64^0x14d8c");
  assert(get_slice_int(64, 85392, 0) == 64^0x14d90, "get_slice_int(64, 85392, 0) == 64^0x14d90");
  assert(get_slice_int(64, 85396, 0) == 64^0x14d94, "get_slice_int(64, 85396, 0) == 64^0x14d94");
  assert(get_slice_int(64, 85400, 0) == 64^0x14d98, "get_slice_int(64, 85400, 0) == 64^0x14d98");
  assert(get_slice_int(64, 85404, 0) == 64^0x14d9c, "get_slice_int(64, 85404, 0) == 64^0x14d9c");
  assert(get_slice_int(64, 85408, 0) == 64^0x14da0, "get_slice_int(64, 85408, 0) == 64^0x14da0");
  assert(get_slice_int(64, 85412, 0) == 64^0x14da4, "get_slice_int(64, 85412, 0) == 64^0x14da4");
  assert(get_slice_int(64, 85416, 0) == 64^0x14da8, "get_slice_int(64, 85416, 0) == 64^0x14da8");
  assert(get_slice_int(64, 85420, 0) == 64^0x14dac, "get_slice_int(64, 85420, 0) == 64^0x14dac");
  assert(get_slice_int(64, 85424, 0) == 64^0x14db0, "get_slice_int(64, 85424, 0) == 64^0x14db0");
  assert(get_slice_int(64, 85428, 0) == 64^0x14db4, "get_slice_int(64, 85428, 0) == 64^0x14db4");
  assert(get_slice_int(64, 85432, 0) == 64^0x14db8, "get_slice_int(64, 85432, 0) == 64^0x14db8");
  assert(get_slice_int(64, 85436, 0) == 64^0x14dbc, "get_slice_int(64, 85436, 0) == 64^0x14dbc");
  assert(get_slice_int(64, 85440, 0) == 64^0x14dc0, "get_slice_int(64, 85440, 0) == 64^0x14dc0");
  assert(get_slice_int(64, 85444, 0) == 64^0x14dc4, "get_slice_int(64, 85444, 0) == 64^0x14dc4");
  assert(get_slice_int(64, 85448, 0) == 64^0x14dc8, "get_slice_int(64, 85448, 0) == 64^0x14dc8");
  assert(get_slice_int(64, 85452, 0) == 64^0x14dcc, "get_slice_int(64, 85452, 0) == 64^0x14dcc");
  assert(get_slice_int(64, 85456, 0) == 64^0x14dd0, "get_slice_int(64, 85456, 0) == 64^0x14dd0");
  assert(get_slice_int(64, 85460, 0) == 64^0x14dd4, "get_slice_int(64, 85460, 0) == 64^0x14dd4");
  assert(get_slice_int(64, 85464, 0) == 64^0x14dd8, "get_slice_int(64, 85464, 0) == 64^0x14dd8");
  assert(get_slice_int(64, 85468, 0) == 64^0x14ddc, "get_slice_int(64, 85468, 0) == 64^0x14ddc");
  assert(get_slice_int(64, 85472, 0) == 64^0x14de0, "get_slice_int(64, 85472, 0) == 64^0x14de0");
  assert(get_slice_int(64, 85476, 0) == 64^0x14de4, "get_slice_int(64, 85476, 0) == 64^0x14de4");
  assert(get_slice_int(64, 85480, 0) == 64^0x14de8, "get_slice_int(64, 85480, 0) == 64^0x14de8");
  assert(get_slice_int(64, 85484, 0) == 64^0x14dec, "get_slice_int(64, 85484, 0) == 64^0x14dec");
  assert(get_slice_int(64, 85488, 0) == 64^0x14df0, "get_slice_int(64, 85488, 0) == 64^0x14df0");
  assert(get_slice_int(64, 85492, 0) == 64^0x14df4, "get_slice_int(64, 85492, 0) == 64^0x14df4");
  assert(get_slice_int(64, 85496, 0) == 64^0x14df8, "get_slice_int(64, 85496, 0) == 64^0x14df8");
  assert(get_slice_int(64, 85500, 0) == 64^0x14dfc, "get_slice_int(64, 85500, 0) == 64^0x14dfc");
  assert(get_slice_int(64, 85504, 0) == 64^0x14e00, "get_slice_int(64, 85504, 0) == 64^0x14e00");
  assert(get_slice_int(64, 85508, 0) == 64^0x14e04, "get_slice_int(64, 85508, 0) == 64^0x14e04");
  assert(get_slice_int(64, 85512, 0) == 64^0x14e08, "get_slice_int(64, 85512, 0) == 64^0x14e08");
  assert(get_slice_int(64, 8736, 0) == 64^0x2220, "get_slice_int(64, 8736, 0) == 64^0x2220");
  assert(get_slice_int(64, 8764, 0) == 64^0x223c, "get_slice_int(64, 8764, 0) == 64^0x223c");
  assert(get_slice_int(64, 9, 0) == 64^0x9, "get_slice_int(64, 9, 0) == 64^0x9");
  assert(get_slice_int(64, 90688, 0) == 64^0x16240, "get_slice_int(64, 90688, 0) == 64^0x16240");
  assert(get_slice_int(64, 90692, 0) == 64^0x16244, "get_slice_int(64, 90692, 0) == 64^0x16244");
  assert(get_slice_int(64, 90896, 0) == 64^0x16310, "get_slice_int(64, 90896, 0) == 64^0x16310");
  assert(get_slice_int(64, 90900, 0) == 64^0x16314, "get_slice_int(64, 90900, 0) == 64^0x16314");
  assert(get_slice_int(64, 90904, 0) == 64^0x16318, "get_slice_int(64, 90904, 0) == 64^0x16318");
  assert(get_slice_int(64, 90908, 0) == 64^0x1631c, "get_slice_int(64, 90908, 0) == 64^0x1631c");
  assert(get_slice_int(64, 90912, 0) == 64^0x16320, "get_slice_int(64, 90912, 0) == 64^0x16320");
  assert(get_slice_int(64, 90916, 0) == 64^0x16324, "get_slice_int(64, 90916, 0) == 64^0x16324");
  assert(get_slice_int(64, 90920, 0) == 64^0x16328, "get_slice_int(64, 90920, 0) == 64^0x16328");
  assert(get_slice_int(64, 90924, 0) == 64^0x1632c, "get_slice_int(64, 90924, 0) == 64^0x1632c");
  assert(get_slice_int(64, 90928, 0) == 64^0x16330, "get_slice_int(64, 90928, 0) == 64^0x16330");
  assert(get_slice_int(64, 90932, 0) == 64^0x16334, "get_slice_int(64, 90932, 0) == 64^0x16334");
  assert(get_slice_int(64, 90984, 0) == 64^0x16368, "get_slice_int(64, 90984, 0) == 64^0x16368");
  assert(get_slice_int(64, 90988, 0) == 64^0x1636c, "get_slice_int(64, 90988, 0) == 64^0x1636c");
  assert(get_slice_int(64, 91012, 0) == 64^0x16384, "get_slice_int(64, 91012, 0) == 64^0x16384");
  assert(get_slice_int(64, 91016, 0) == 64^0x16388, "get_slice_int(64, 91016, 0) == 64^0x16388");
  assert(get_slice_int(64, 91072, 0) == 64^0x163c0, "get_slice_int(64, 91072, 0) == 64^0x163c0");
  assert(get_slice_int(64, 91076, 0) == 64^0x163c4, "get_slice_int(64, 91076, 0) == 64^0x163c4");
  assert(get_slice_int(64, 91088, 0) == 64^0x163d0, "get_slice_int(64, 91088, 0) == 64^0x163d0");
  assert(get_slice_int(64, 91092, 0) == 64^0x163d4, "get_slice_int(64, 91092, 0) == 64^0x163d4");
  assert(get_slice_int(64, 91104, 0) == 64^0x163e0, "get_slice_int(64, 91104, 0) == 64^0x163e0");
  assert(get_slice_int(64, 91108, 0) == 64^0x163e4, "get_slice_int(64, 91108, 0) == 64^0x163e4");
  assert(get_slice_int(64, 91120, 0) == 64^0x163f0, "get_slice_int(64, 91120, 0) == 64^0x163f0");
  assert(get_slice_int(64, 91124, 0) == 64^0x163f4, "get_slice_int(64, 91124, 0) == 64^0x163f4");
  assert(get_slice_int(64, 91128, 0) == 64^0x163f8, "get_slice_int(64, 91128, 0) == 64^0x163f8");
  assert(get_slice_int(64, 91132, 0) == 64^0x163fc, "get_slice_int(64, 91132, 0) == 64^0x163fc");
  assert(get_slice_int(64, 91136, 0) == 64^0x16400, "get_slice_int(64, 91136, 0) == 64^0x16400");
  assert(get_slice_int(64, 91140, 0) == 64^0x16404, "get_slice_int(64, 91140, 0) == 64^0x16404");
  assert(get_slice_int(64, 91144, 0) == 64^0x16408, "get_slice_int(64, 91144, 0) == 64^0x16408");
  assert(get_slice_int(64, 91148, 0) == 64^0x1640c, "get_slice_int(64, 91148, 0) == 64^0x1640c");
  assert(get_slice_int(64, 91168, 0) == 64^0x16420, "get_slice_int(64, 91168, 0) == 64^0x16420");
  assert(get_slice_int(64, 91172, 0) == 64^0x16424, "get_slice_int(64, 91172, 0) == 64^0x16424");
  assert(get_slice_int(64, 91176, 0) == 64^0x16428, "get_slice_int(64, 91176, 0) == 64^0x16428");
  assert(get_slice_int(64, 91180, 0) == 64^0x1642c, "get_slice_int(64, 91180, 0) == 64^0x1642c");
  assert(get_slice_int(64, 91212, 0) == 64^0x1644c, "get_slice_int(64, 91212, 0) == 64^0x1644c");
  assert(get_slice_int(64, 91216, 0) == 64^0x16450, "get_slice_int(64, 91216, 0) == 64^0x16450");
  assert(get_slice_int(64, 91228, 0) == 64^0x1645c, "get_slice_int(64, 91228, 0) == 64^0x1645c");
  assert(get_slice_int(64, 91232, 0) == 64^0x16460, "get_slice_int(64, 91232, 0) == 64^0x16460");
  assert(get_slice_int(64, 91236, 0) == 64^0x16464, "get_slice_int(64, 91236, 0) == 64^0x16464");
  assert(get_slice_int(64, 91252, 0) == 64^0x16474, "get_slice_int(64, 91252, 0) == 64^0x16474");
  assert(get_slice_int(64, 91256, 0) == 64^0x16478, "get_slice_int(64, 91256, 0) == 64^0x16478");
  assert(get_slice_int(64, 91260, 0) == 64^0x1647c, "get_slice_int(64, 91260, 0) == 64^0x1647c");
  assert(get_slice_int(64, 91264, 0) == 64^0x16480, "get_slice_int(64, 91264, 0) == 64^0x16480");
  assert(get_slice_int(64, 91268, 0) == 64^0x16484, "get_slice_int(64, 91268, 0) == 64^0x16484");
  assert(get_slice_int(64, 91272, 0) == 64^0x16488, "get_slice_int(64, 91272, 0) == 64^0x16488");
  assert(get_slice_int(64, 91276, 0) == 64^0x1648c, "get_slice_int(64, 91276, 0) == 64^0x1648c");
  assert(get_slice_int(64, 91280, 0) == 64^0x16490, "get_slice_int(64, 91280, 0) == 64^0x16490");
  assert(get_slice_int(64, 91284, 0) == 64^0x16494, "get_slice_int(64, 91284, 0) == 64^0x16494");
  assert(get_slice_int(64, 91288, 0) == 64^0x16498, "get_slice_int(64, 91288, 0) == 64^0x16498");
  assert(get_slice_int(64, 91292, 0) == 64^0x1649c, "get_slice_int(64, 91292, 0) == 64^0x1649c");
  assert(get_slice_int(64, 91296, 0) == 64^0x164a0, "get_slice_int(64, 91296, 0) == 64^0x164a0");
  assert(get_slice_int(64, 91300, 0) == 64^0x164a4, "get_slice_int(64, 91300, 0) == 64^0x164a4");
  assert(get_slice_int(64, 91304, 0) == 64^0x164a8, "get_slice_int(64, 91304, 0) == 64^0x164a8");
  assert(get_slice_int(64, 91308, 0) == 64^0x164ac, "get_slice_int(64, 91308, 0) == 64^0x164ac");
  assert(get_slice_int(64, 91312, 0) == 64^0x164b0, "get_slice_int(64, 91312, 0) == 64^0x164b0");
  assert(get_slice_int(64, 91316, 0) == 64^0x164b4, "get_slice_int(64, 91316, 0) == 64^0x164b4");
  assert(get_slice_int(64, 91320, 0) == 64^0x164b8, "get_slice_int(64, 91320, 0) == 64^0x164b8");
  assert(get_slice_int(64, 91348, 0) == 64^0x164d4, "get_slice_int(64, 91348, 0) == 64^0x164d4");
  assert(get_slice_int(64, 91352, 0) == 64^0x164d8, "get_slice_int(64, 91352, 0) == 64^0x164d8");
  assert(get_slice_int(64, 91356, 0) == 64^0x164dc, "get_slice_int(64, 91356, 0) == 64^0x164dc");
  assert(get_slice_int(64, 91360, 0) == 64^0x164e0, "get_slice_int(64, 91360, 0) == 64^0x164e0");
  assert(get_slice_int(64, 91408, 0) == 64^0x16510, "get_slice_int(64, 91408, 0) == 64^0x16510");
  assert(get_slice_int(64, 91412, 0) == 64^0x16514, "get_slice_int(64, 91412, 0) == 64^0x16514");
  assert(get_slice_int(64, 91416, 0) == 64^0x16518, "get_slice_int(64, 91416, 0) == 64^0x16518");
  assert(get_slice_int(64, 91420, 0) == 64^0x1651c, "get_slice_int(64, 91420, 0) == 64^0x1651c");
  assert(get_slice_int(64, 91432, 0) == 64^0x16528, "get_slice_int(64, 91432, 0) == 64^0x16528");
  assert(get_slice_int(64, 91436, 0) == 64^0x1652c, "get_slice_int(64, 91436, 0) == 64^0x1652c");
  assert(get_slice_int(64, 91536, 0) == 64^0x16590, "get_slice_int(64, 91536, 0) == 64^0x16590");
  assert(get_slice_int(64, 91540, 0) == 64^0x16594, "get_slice_int(64, 91540, 0) == 64^0x16594");
  assert(get_slice_int(64, 91544, 0) == 64^0x16598, "get_slice_int(64, 91544, 0) == 64^0x16598");
  assert(get_slice_int(64, 91572, 0) == 64^0x165b4, "get_slice_int(64, 91572, 0) == 64^0x165b4");
  assert(get_slice_int(64, 91576, 0) == 64^0x165b8, "get_slice_int(64, 91576, 0) == 64^0x165b8");
  assert(get_slice_int(64, 91580, 0) == 64^0x165bc, "get_slice_int(64, 91580, 0) == 64^0x165bc");
  assert(get_slice_int(64, 91592, 0) == 64^0x165c8, "get_slice_int(64, 91592, 0) == 64^0x165c8");
  assert(get_slice_int(64, 91596, 0) == 64^0x165cc, "get_slice_int(64, 91596, 0) == 64^0x165cc");
  assert(get_slice_int(64, 91600, 0) == 64^0x165d0, "get_slice_int(64, 91600, 0) == 64^0x165d0");
  assert(get_slice_int(64, 91616, 0) == 64^0x165e0, "get_slice_int(64, 91616, 0) == 64^0x165e0");
  assert(get_slice_int(64, 91620, 0) == 64^0x165e4, "get_slice_int(64, 91620, 0) == 64^0x165e4");
  assert(get_slice_int(64, 91624, 0) == 64^0x165e8, "get_slice_int(64, 91624, 0) == 64^0x165e8");
  assert(get_slice_int(64, 91628, 0) == 64^0x165ec, "get_slice_int(64, 91628, 0) == 64^0x165ec");
  assert(get_slice_int(64, 91632, 0) == 64^0x165f0, "get_slice_int(64, 91632, 0) == 64^0x165f0");
  assert(get_slice_int(64, 91636, 0) == 64^0x165f4, "get_slice_int(64, 91636, 0) == 64^0x165f4");
  assert(get_slice_int(64, 91640, 0) == 64^0x165f8, "get_slice_int(64, 91640, 0) == 64^0x165f8");
  assert(get_slice_int(64, 91644, 0) == 64^0x165fc, "get_slice_int(64, 91644, 0) == 64^0x165fc");
  assert(get_slice_int(64, 91648, 0) == 64^0x16600, "get_slice_int(64, 91648, 0) == 64^0x16600");
  assert(get_slice_int(64, 91660, 0) == 64^0x1660c, "get_slice_int(64, 91660, 0) == 64^0x1660c");
  assert(get_slice_int(64, 91664, 0) == 64^0x16610, "get_slice_int(64, 91664, 0) == 64^0x16610");
  assert(get_slice_int(64, 91668, 0) == 64^0x16614, "get_slice_int(64, 91668, 0) == 64^0x16614");
  assert(get_slice_int(64, 91708, 0) == 64^0x1663c, "get_slice_int(64, 91708, 0) == 64^0x1663c");
  assert(get_slice_int(64, 91712, 0) == 64^0x16640, "get_slice_int(64, 91712, 0) == 64^0x16640");
  assert(get_slice_int(64, 91716, 0) == 64^0x16644, "get_slice_int(64, 91716, 0) == 64^0x16644");
  assert(get_slice_int(64, 91720, 0) == 64^0x16648, "get_slice_int(64, 91720, 0) == 64^0x16648");
  assert(get_slice_int(64, 91724, 0) == 64^0x1664c, "get_slice_int(64, 91724, 0) == 64^0x1664c");
  assert(get_slice_int(64, 91728, 0) == 64^0x16650, "get_slice_int(64, 91728, 0) == 64^0x16650");
  assert(get_slice_int(64, 91732, 0) == 64^0x16654, "get_slice_int(64, 91732, 0) == 64^0x16654");
  assert(get_slice_int(64, 91736, 0) == 64^0x16658, "get_slice_int(64, 91736, 0) == 64^0x16658");
  assert(get_slice_int(64, 91740, 0) == 64^0x1665c, "get_slice_int(64, 91740, 0) == 64^0x1665c");
  assert(get_slice_int(64, 91752, 0) == 64^0x16668, "get_slice_int(64, 91752, 0) == 64^0x16668");
  assert(get_slice_int(64, 91756, 0) == 64^0x1666c, "get_slice_int(64, 91756, 0) == 64^0x1666c");
  assert(get_slice_int(64, 91768, 0) == 64^0x16678, "get_slice_int(64, 91768, 0) == 64^0x16678");
  assert(get_slice_int(64, 91772, 0) == 64^0x1667c, "get_slice_int(64, 91772, 0) == 64^0x1667c");
  assert(get_slice_int(64, 91776, 0) == 64^0x16680, "get_slice_int(64, 91776, 0) == 64^0x16680");
  assert(get_slice_int(64, 91780, 0) == 64^0x16684, "get_slice_int(64, 91780, 0) == 64^0x16684");
  assert(get_slice_int(64, 91808, 0) == 64^0x166a0, "get_slice_int(64, 91808, 0) == 64^0x166a0");
  assert(get_slice_int(64, 91812, 0) == 64^0x166a4, "get_slice_int(64, 91812, 0) == 64^0x166a4");
  assert(get_slice_int(64, 91816, 0) == 64^0x166a8, "get_slice_int(64, 91816, 0) == 64^0x166a8");
  assert(get_slice_int(64, 91820, 0) == 64^0x166ac, "get_slice_int(64, 91820, 0) == 64^0x166ac");
  assert(get_slice_int(64, 91824, 0) == 64^0x166b0, "get_slice_int(64, 91824, 0) == 64^0x166b0");
  assert(get_slice_int(64, 91828, 0) == 64^0x166b4, "get_slice_int(64, 91828, 0) == 64^0x166b4");
}
